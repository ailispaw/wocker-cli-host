#!/bin/sh
set -e

PWD=$(pwd)

DIR=$(pwd)
while [ "${DIR}" != "/" -a ! -e "${DIR}/Vagrantfile" ]; do
  cd ..
  DIR=$(pwd)
done
SSH_CONFIG="${DIR}/.ssh_config"

cd ${PWD}

vagrant_ssh() {
  if [ ! -e "${SSH_CONFIG}" ]; then
    vagrant ssh-config > "${SSH_CONFIG}"
  fi
  if grep -q "^Host wocker" "${SSH_CONFIG}"; then
    ssh -F "${SSH_CONFIG}" wocker "bash -lc '$*'"
  else
    rm -f "${SSH_CONFIG}"
  fi
}

case "$1" in

  #
  # Start a specific container with `vagrant up`
  #
  'up' )

    if [[ "$2" && ! "$2" =~ ^-.*$ ]]; then
      WOCKER_COMMAND="wocker start $2"
      vagrant $1
      vagrant ssh-config > "${SSH_CONFIG}"
      vagrant_ssh "${WOCKER_COMMAND}"
    else
      vagrant $@
      vagrant ssh-config > "${SSH_CONFIG}"
    fi
    ;;

  #
  # Start a specific container with `vagrant reload`
  #
  'reload' )

    if [[ "$2" && ! "$2" =~ ^-.*$ ]]; then
      WOCKER_COMMAND="wocker start $2"
      vagrant_ssh "wocker stop"
      vagrant $1
      vagrant ssh-config > "${SSH_CONFIG}"
      vagrant_ssh "${WOCKER_COMMAND}"
    else
      vagrant $@
      vagrant ssh-config > "${SSH_CONFIG}"
    fi
    ;;

  #
  # Stop all containers before `vagrant halt`
  #
  'halt' )
    vagrant_ssh "wocker stop"
    vagrant $1
    ;;

  #
  # Commonly used vagrant commands
  #
  'ssh' | 'status' | 'resume' | 'suspend' )
    vagrant $@
    ;;

  #
  # Docker command aliases, Wocker original commands and others just pass through
  #
  * )
    WOCKER_COMMAND="wocker $@"
    vagrant_ssh "${WOCKER_COMMAND}"
    ;;

esac
